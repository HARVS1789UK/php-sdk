<?xml version="1.0" encoding="UTF-8"?>


<project name="php-sdk" default="dist" basedir=".">
    
    <property name="package" value="${phing.project.name}" override="true" />
    <property name="version" value="1.0.0" override="true" />
   
    <property name="builddir" value="${project.basedir}/build" override="true" />
    <property name="srcdir" value="${project.basedir}/src" override="true" />
    
    <property name="extdirectorydir" value="${project.basedir}/directory" override="true" />

    <exec outputProperty="git.branch" 
        command="git rev-parse --abbrev-ref HEAD" />
    
    <autoloader />
    
    <!-- ============================================  -->
    <!-- Target: clean                               -->
    <!-- ============================================  -->
    <target name="clean">
        <echo msg="Cleaning directory structure" />
        <available file="${builddir}" property="dir.build" />
        <if>
            <isset property="dir.build" />
            <then>
                <delete verbose="true" includeemptydirs="true">
                    <fileset dir="${builddir}">
                        <include name="**/**" />
                    </fileset>
                </delete>            
            </then>
        </if>
    </target>
    
    <!-- ============================================  -->
    <!-- Target: prepare                               -->
    <!-- ============================================  -->
    <target name="prepare" depends="clean">
        <echo msg="Making directory ${builddir} (${git.branch})" />
        <mkdir dir="${builddir}" />
    </target>
    
    <!-- ============================================  -->
    <!-- Target: phpcs                                 -->
    <!-- ============================================  -->    
    <target name="phpcs" description="Generate checkstyle.xml using PHP_CodeSniffer">
        <echo msg="Running PHP_CodeSniffer" />
        <exec executable="phpcs" dir="${project.basedir}">
            <arg line="--report=checkstyle --report-file=${project.basedir}/test/checkstyle.xml --standard=${project.basedir}/test/phpcs/OpenCart/ruleset.xml --extensions=php ${srcdir}/"/>
        </exec>
    </target>
    
    <!-- ============================================  -->
    <!-- Target: unit-test                             -->
    <!-- ============================================  -->
    <target name="unit-test">
        <phpunit
            bootstrap="${project.basedir}/vendor/autoload.php">
            <formatter type="plain" usefile="false"/>
            <batchtest name="integration-test-batch">
                <fileset dir="${project.basedir}/test">
                    <include name="**/*UnitTest*.php" />
                    <exclude name="**/*IntegrationTest*.php" />
                </fileset>
            </batchtest>
        </phpunit>
    </target>
    
    <!-- ============================================  -->
    <!-- Target: integration-test                      -->
    <!-- ============================================  -->
    <target name="integration-test">
        <phpunit
            bootstrap="${project.basedir}/vendor/autoload.php">
            <formatter type="plain" usefile="false"/>
            <batchtest name="integration-test-batch">
                <fileset dir="${project.basedir}/test">
                    <include name="**/*IntegrationTest*.php" />
                    <exclude name="**/*UnitTest*.php" />
                </fileset>
            </batchtest>
        </phpunit>
    </target>
    
    <!-- ============================================  -->
    <!-- Target: test                                  -->
    <!-- ============================================  -->
    <target name="test" depends="build">
        <property name="phpunit.executable"
            value="${project.basedir}/vendor/bin/phpunit" />

        <if>
            <not><isset property="phpunit.executable" /></not>
            <then>
                <exec outputProperty="phpunit.executable"
                    command="whereis phpunit" /> 
            </then>
        </if>
        
        <echo msg="phpunit => ${phpunit.executable}" />
        
        <echo msg="Invoking unit tests..." />
        <phingcall target="unit-test">
            <property name="pharlocation" value="${phpunit.executable}" />
        </phingcall> 
       
        <available file="${project.basedir}/test/etc/configuration.json"
            property="configuration.exists"
            value="true" />
        <if>
            <isset property="configuration.exists" />
            <then>
                <echo msg="Invoking integration tests..." />
                <phingcall target="integration-test">
                    <property name="pharlocation" value="${phpunit.executable}" />
                </phingcall>
            </then>
            <else>
                <echo msg="Not invoking integration tests... local configuration not presently available." />
            </else>
        </if>
    </target>

    <!-- ============================================  -->
    <!-- Target: build                                 -->
    <!-- ============================================  -->
    <target name="build" depends="prepare,phpcs">
        <echo msg="Copying files to build directory..." />
        <copy todir="${builddir}">
            <fileset dir=".">
                <include name="composer.json" />
                <include name="LICENsE" />
                <include name="README.md" />
            </fileset>
            <fileset dir="${srcdir}">
                <!-- <include name="LICENCE.md" /> -->
                <include name="**/*.php" />
                <include name="**/*.png" />
            </fileset>
        </copy>
    </target>

    <!-- ============================================  -->
    <!-- (DEFAULT)  Target: dist                       -->
    <!-- ============================================  -->
    <target name="dist" depends="build,test">
        <echo msg="Creating archive..." />
        <zip destfile="${builddir}/${package}.zip">
            <fileset dir="${builddir}">
                <include name="**/*" />
            </fileset>
        </zip>
        <echo msg="Files copied and compressed in build directory OK!" />
    </target>
    
</project>
